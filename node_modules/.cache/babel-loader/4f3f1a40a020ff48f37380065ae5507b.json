{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport function useWebSocket() {\n  _s();\n  const [path, setPath] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.addEventListener('open', function (event) {\n      console.log('Connected to server');\n    });\n    socket.addEventListener('message', function (event) {\n      const coordinates = JSON.parse(event.data);\n      console.log('Received coordinates', coordinates);\n\n      // Update the path state with the new coordinates\n      setPath(prevPath => [...prevPath, coordinates]);\n    });\n    socket.addEventListener('close', function (event) {\n      console.log('Disconnected from server');\n    });\n    return () => {\n      socket.close();\n    };\n  }, []);\n  return path;\n}\n_s(useWebSocket, \"ne8yauDDtjy5ocPkSxkmXSu7s6E=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useState","useWebSocket","path","setPath","socket","WebSocket","addEventListener","event","console","log","coordinates","JSON","parse","data","prevPath","close"],"sources":["/Users/amacher0/TelemetryVisualization/src/components/WebSocket/socket.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport function useWebSocket() {\r\n  const [path, setPath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:8080');\r\n\r\n    socket.addEventListener('open', function(event) {\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    socket.addEventListener('message', function(event) {\r\n      const coordinates = JSON.parse(event.data);\r\n      console.log('Received coordinates', coordinates);\r\n\r\n      // Update the path state with the new coordinates\r\n      setPath(prevPath => [...prevPath, coordinates]);\r\n    });\r\n\r\n    socket.addEventListener('close', function(event) {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  return path;\r\n}\r\n\r\nexport default useWebSocket;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,SAASC,YAAY,GAAG;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMK,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,UAASC,KAAK,EAAE;MAC9CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFL,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;MACjD,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC;MAC1CL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,WAAW,CAAC;;MAEhD;MACAP,OAAO,CAACW,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEJ,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;IAEFN,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;MAC/CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,MAAM,CAACW,KAAK,EAAE;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOb,IAAI;AACb;AAAC,GA5BeD,YAAY;AA8B5B,eAAeA,YAAY"},"metadata":{},"sourceType":"module"}