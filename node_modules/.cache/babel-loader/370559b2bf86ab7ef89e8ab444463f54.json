{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nexport function useWebSocket() {\n  _s();\n  const [path, setPath] = useState([]);\n  useEffect(() => {\n    const socket = new WebSocket('ws://localhost:8080');\n    socket.addEventListener('open', function (event) {\n      console.log('Connected to server');\n    });\n    socket.addEventListener('message', function (event) {\n      const coordinates = JSON.parse(event.data);\n      console.log('Received coordinates', coordinates);\n\n      // Update the path state with the new coordinates\n      setPath(prevPath => [...prevPath, coordinates]);\n    });\n    socket.addEventListener('close', function (event) {\n      console.log('Disconnected from server');\n    });\n    return () => {\n      socket.close();\n    };\n  }, []);\n  function downloadCSV() {\n    // Convert the data to CSV format\n    const csv = d3.csvFormat(path);\n    // Create a Blob object for the CSV data\n    const csvBlob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    // Create a URL for the Blob object\n    const csvUrl = URL.createObjectURL(csvBlob);\n    // Create a link element for the CSV file download\n    const downloadLink = document.createElement('a');\n    downloadLink.href = csvUrl;\n    downloadLink.download = 'coordinates.csv';\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  }\n  return {\n    path,\n    downloadCSV\n  };\n}\n_s(useWebSocket, \"ne8yauDDtjy5ocPkSxkmXSu7s6E=\");\nexport default useWebSocket;","map":{"version":3,"names":["useEffect","useState","d3","useWebSocket","path","setPath","socket","WebSocket","addEventListener","event","console","log","coordinates","JSON","parse","data","prevPath","close","downloadCSV","csv","csvFormat","csvBlob","Blob","type","csvUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/WebSocket/socket.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport function useWebSocket() {\r\n  const [path, setPath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:8080');\r\n\r\n    socket.addEventListener('open', function(event) {\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    socket.addEventListener('message', function(event) {\r\n      const coordinates = JSON.parse(event.data);\r\n      console.log('Received coordinates', coordinates);\r\n\r\n      // Update the path state with the new coordinates\r\n      setPath(prevPath => [...prevPath, coordinates]);\r\n    });\r\n\r\n    socket.addEventListener('close', function(event) {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  function downloadCSV() {\r\n    // Convert the data to CSV format\r\n    const csv = d3.csvFormat(path);\r\n    // Create a Blob object for the CSV data\r\n    const csvBlob = new Blob([csv], { type: 'text/csv' });\r\n    // Create a URL for the Blob object\r\n    const csvUrl = URL.createObjectURL(csvBlob);\r\n    // Create a link element for the CSV file download\r\n    const downloadLink = document.createElement('a');\r\n    downloadLink.href = csvUrl;\r\n    downloadLink.download = 'coordinates.csv';\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    document.body.removeChild(downloadLink);\r\n  }\r\n\r\n  return { path, downloadCSV };\r\n}\r\n\r\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAExB,OAAO,SAASC,YAAY,GAAG;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEnDD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,UAASC,KAAK,EAAE;MAC9CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;IAEFL,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAE,UAASC,KAAK,EAAE;MACjD,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC;MAC1CL,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEC,WAAW,CAAC;;MAEhD;MACAP,OAAO,CAACW,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAEJ,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC;IAEFN,MAAM,CAACE,gBAAgB,CAAC,OAAO,EAAE,UAASC,KAAK,EAAE;MAC/CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACzC,CAAC,CAAC;IAEF,OAAO,MAAM;MACXL,MAAM,CAACW,KAAK,EAAE;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,WAAW,GAAG;IACrB;IACA,MAAMC,GAAG,GAAGjB,EAAE,CAACkB,SAAS,CAAChB,IAAI,CAAC;IAC9B;IACA,MAAMiB,OAAO,GAAG,IAAIC,IAAI,CAAC,CAACH,GAAG,CAAC,EAAE;MAAEI,IAAI,EAAE;IAAW,CAAC,CAAC;IACrD;IACA,MAAMC,MAAM,GAAGC,GAAG,CAACC,eAAe,CAACL,OAAO,CAAC;IAC3C;IACA,MAAMM,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAChDF,YAAY,CAACG,IAAI,GAAGN,MAAM;IAC1BG,YAAY,CAACI,QAAQ,GAAG,iBAAiB;IACzCH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,YAAY,CAAC;IACvCA,YAAY,CAACO,KAAK,EAAE;IACpBN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,YAAY,CAAC;EACzC;EAEA,OAAO;IAAEvB,IAAI;IAAEc;EAAY,CAAC;AAC9B;AAAC,GA5Cef,YAAY;AA8C5B,eAAeA,YAAY"},"metadata":{},"sourceType":"module"}