{"ast":null,"code":"var _jsxFileName = \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/Map/MainPage.js\",\n  _s = $RefreshSig$();\nimport ToolSummary from \"./ToolSummary\";\nimport Map from \"./Map\";\nimport { Fragment, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from './MapContainer.module.css';\nimport ToggleSlider from '../ToggleSlider/ToggleSlider.js';\nimport { useWebSocket } from '../WebSocket/socket.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const {\n    path,\n    downloadCSV\n  } = useWebSocket();\n  const [isToggled, setIsToggled] = useState(false);\n  function handleToggleChange() {\n    setIsToggled(!isToggled);\n  }\n  const mapsToShow = isToggled ? ['Map-GPS', 'Map-IMU', 'Map-FM'] : ['Map-GPS-CSV', 'Map-IMU-CSV', 'Map-FM-CSV'];\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolSummary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Do you want real-time or CSV data? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSlider, {\n          onChange: handleToggleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.cardContainer,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          path: path,\n          color: 'blue',\n          id: \"tempMap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.cardContainer,\n      children: mapsToShow.map(mapId => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.mapContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: mapId === 'Map0' ? 'Map 1' : mapId === 'Map1' ? 'Map 2' : mapId === 'Map2' ? 'Map 3' : mapId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          path: [{\n            lat: 34.719,\n            lng: -86.666\n          }, {\n            lat: 34.651,\n            lng: -86.821\n          }, {\n            lat: 34.651,\n            lng: -86.858\n          }],\n          color: \"blue\",\n          id: mapId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"Z587Vo1SDvUdTGBJc/QhvUp6Efk=\", false, function () {\n  return [useWebSocket];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["ToolSummary","Map","Fragment","useState","Card","classes","ToggleSlider","useWebSocket","MainPage","path","downloadCSV","isToggled","setIsToggled","handleToggleChange","mapsToShow","cardContainer","container","map","mapId","mapContainer","lat","lng"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/Map/MainPage.js"],"sourcesContent":["\r\nimport ToolSummary from \"./ToolSummary\";\r\nimport Map from \"./Map\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from './MapContainer.module.css';\r\nimport ToggleSlider from '../ToggleSlider/ToggleSlider.js';\r\nimport { useWebSocket } from '../WebSocket/socket.js'\r\n\r\nconst MainPage = () => {\r\n    const {path, downloadCSV} = useWebSocket();\r\n    const [isToggled, setIsToggled] = useState(false);\r\n\r\n    function handleToggleChange() {\r\n        setIsToggled(!isToggled);\r\n    }\r\n\r\n    const mapsToShow = isToggled ? ['Map-GPS', 'Map-IMU', 'Map-FM'] : ['Map-GPS-CSV', 'Map-IMU-CSV', 'Map-FM-CSV'];\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToolSummary />\r\n            <p></p>\r\n            <Card>\r\n                <section>\r\n                    <h2> Do you want real-time or CSV data? </h2>\r\n                    <ToggleSlider onChange={handleToggleChange} />\r\n                </section>\r\n            </Card>\r\n\r\n            <p></p>\r\n            <Card className={classes.cardContainer}>\r\n                <section className={classes.container}>\r\n                <h2>All Paths</h2>\r\n                <Map\r\n                    path={path}\r\n                    color = {'blue'}\r\n                    id = \"tempMap\"\r\n                    />\r\n                </section>\r\n            </Card>\r\n\r\n            <p></p>\r\n            <Card className={classes.cardContainer}>\r\n                {mapsToShow.map((mapId) => (\r\n                    <section className={classes.mapContainer}>\r\n                    <h2>{mapId === 'Map0' ? 'Map 1' : mapId === 'Map1' ? 'Map 2' : mapId === 'Map2' ? 'Map 3' : mapId}</h2>\r\n                         <Map\r\n                            path={[\r\n                                { lat: 34.719, lng: -86.666 },\r\n                                { lat: 34.651, lng: -86.821 },\r\n                                { lat: 34.651, lng: -86.858 },\r\n                            ]}\r\n                            color={\"blue\"}\r\n                            id={mapId}\r\n                        />\r\n                        </section>\r\n                ))}\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default MainPage;\r\n"],"mappings":";;AACA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,SAASC,YAAY,QAAQ,wBAAwB;AAAA;AAErD,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM;IAACC,IAAI;IAAEC;EAAW,CAAC,GAAGH,YAAY,EAAE;EAC1C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,SAASU,kBAAkB,GAAG;IAC1BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B;EAEA,MAAMG,UAAU,GAAGH,SAAS,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,YAAY,CAAC;EAE9G,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf;MAAA;MAAA;MAAA;IAAA,QAAO,eACP,QAAC,IAAI;MAAA,uBACD;QAAA,wBACI;UAAA,UAAI;QAAoC;UAAA;UAAA;UAAA;QAAA,QAAK,eAC7C,QAAC,YAAY;UAAC,QAAQ,EAAEE;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA,QACP,eAEP;MAAA;MAAA;MAAA;IAAA,QAAO,eACP,QAAC,IAAI;MAAC,SAAS,EAAER,OAAO,CAACU,aAAc;MAAA,uBACnC;QAAS,SAAS,EAAEV,OAAO,CAACW,SAAU;QAAA,wBACtC;UAAA,UAAI;QAAS;UAAA;UAAA;UAAA;QAAA,QAAK,eAClB,QAAC,GAAG;UACA,IAAI,EAAEP,IAAK;UACX,KAAK,EAAI,MAAO;UAChB,EAAE,EAAG;QAAS;UAAA;UAAA;UAAA;QAAA,QACZ;MAAA;QAAA;QAAA;QAAA;MAAA;IACI;MAAA;MAAA;MAAA;IAAA,QACP,eAEP;MAAA;MAAA;MAAA;IAAA,QAAO,eACP,QAAC,IAAI;MAAC,SAAS,EAAEJ,OAAO,CAACU,aAAc;MAAA,UAClCD,UAAU,CAACG,GAAG,CAAEC,KAAK,iBAClB;QAAS,SAAS,EAAEb,OAAO,CAACc,YAAa;QAAA,wBACzC;UAAA,UAAKD,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA,KAAK,KAAK,MAAM,GAAG,OAAO,GAAGA;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAClG,QAAC,GAAG;UACD,IAAI,EAAE,CACF;YAAEE,GAAG,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;UAAO,CAAC,EAC7B;YAAED,GAAG,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;UAAO,CAAC,EAC7B;YAAED,GAAG,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;UAAO,CAAC,CAC/B;UACF,KAAK,EAAE,MAAO;UACd,EAAE,EAAEH;QAAM;UAAA;UAAA;UAAA;QAAA,QACZ;MAAA;QAAA;QAAA;QAAA;MAAA,QAET;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEnB,CAAC;AAAC,GApDIV,QAAQ;EAAA,QACkBD,YAAY;AAAA;AAAA,KADtCC,QAAQ;AAsDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}