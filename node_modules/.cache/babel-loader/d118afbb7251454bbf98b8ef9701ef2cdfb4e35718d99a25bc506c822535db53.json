{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(numbers);\nexport default function number(x) {\n  return x === null ? NaN : +x;\n}\nexport function numbers(values, valueof) {\n  var _iterator, _step, value, index, _iterator2, _step2, _value;\n  return _regeneratorRuntime().wrap(function numbers$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (!(valueof === undefined)) {\n          _context.next = 21;\n          break;\n        }\n        _iterator = _createForOfIteratorHelper(values);\n        _context.prev = 2;\n        _iterator.s();\n      case 4:\n        if ((_step = _iterator.n()).done) {\n          _context.next = 11;\n          break;\n        }\n        value = _step.value;\n        if (!(value != null && (value = +value) >= value)) {\n          _context.next = 9;\n          break;\n        }\n        _context.next = 9;\n        return value;\n      case 9:\n        _context.next = 4;\n        break;\n      case 11:\n        _context.next = 16;\n        break;\n      case 13:\n        _context.prev = 13;\n        _context.t0 = _context[\"catch\"](2);\n        _iterator.e(_context.t0);\n      case 16:\n        _context.prev = 16;\n        _iterator.f();\n        return _context.finish(16);\n      case 19:\n        _context.next = 40;\n        break;\n      case 21:\n        index = -1;\n        _iterator2 = _createForOfIteratorHelper(values);\n        _context.prev = 23;\n        _iterator2.s();\n      case 25:\n        if ((_step2 = _iterator2.n()).done) {\n          _context.next = 32;\n          break;\n        }\n        _value = _step2.value;\n        if (!((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value)) {\n          _context.next = 30;\n          break;\n        }\n        _context.next = 30;\n        return _value;\n      case 30:\n        _context.next = 25;\n        break;\n      case 32:\n        _context.next = 37;\n        break;\n      case 34:\n        _context.prev = 34;\n        _context.t1 = _context[\"catch\"](23);\n        _iterator2.e(_context.t1);\n      case 37:\n        _context.prev = 37;\n        _iterator2.f();\n        return _context.finish(37);\n      case 40:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[2, 13, 16, 19], [23, 34, 37, 40]]);\n}","map":{"version":3,"names":["numbers","number","x","NaN","values","valueof","_iterator","_step","value","index","_iterator2","_step2","_value","_regeneratorRuntime","wrap","numbers$","_context","prev","next","undefined","_createForOfIteratorHelper","s","n","done","t0","e","f","finish","t1","stop","_marked"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-array/src/number.js"],"sourcesContent":["export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n"],"mappings":";;sDAIiBA,OAAO;AAJxB,eAAe,SAASC,MAAMA,CAACC,CAAC,EAAE;EAChC,OAAOA,CAAC,KAAK,IAAI,GAAGC,GAAG,GAAG,CAACD,CAAC;AAC9B;AAEA,OAAO,SAAUF,OAAOA,CAACI,MAAM,EAAEC,OAAO;EAAA,IAAAC,SAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,MAAA;EAAA,OAAAC,mBAAA,GAAAC,IAAA,UAAAC,SAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAA,MAClCb,OAAO,KAAKc,SAAS;UAAAH,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAAZ,SAAA,GAAAc,0BAAA,CACLhB,MAAM;QAAAY,QAAA,CAAAC,IAAA;QAAAX,SAAA,CAAAe,CAAA;MAAA;QAAA,KAAAd,KAAA,GAAAD,SAAA,CAAAgB,CAAA,IAAAC,IAAA;UAAAP,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAfV,KAAK,GAAAD,KAAA,CAAAC,KAAA;QAAA,MACRA,KAAK,IAAI,IAAI,IAAI,CAACA,KAAK,GAAG,CAACA,KAAK,KAAKA,KAAK;UAAAQ,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAAF,QAAA,CAAAE,IAAA;QAC5C,OAAMV,KAAK;MAAA;QAAAQ,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAQ,EAAA,GAAAR,QAAA;QAAAV,SAAA,CAAAmB,CAAA,CAAAT,QAAA,CAAAQ,EAAA;MAAA;QAAAR,QAAA,CAAAC,IAAA;QAAAX,SAAA,CAAAoB,CAAA;QAAA,OAAAV,QAAA,CAAAW,MAAA;MAAA;QAAAX,QAAA,CAAAE,IAAA;QAAA;MAAA;QAIXT,KAAK,GAAG,CAAC,CAAC;QAAAC,UAAA,GAAAU,0BAAA,CACIhB,MAAM;QAAAY,QAAA,CAAAC,IAAA;QAAAP,UAAA,CAAAW,CAAA;MAAA;QAAA,KAAAV,MAAA,GAAAD,UAAA,CAAAY,CAAA,IAAAC,IAAA;UAAAP,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAfV,MAAK,GAAAG,MAAA,CAAAH,KAAA;QAAA,MACR,CAACA,MAAK,GAAGH,OAAO,CAACG,MAAK,EAAE,EAAEC,KAAK,EAAEL,MAAM,CAAC,KAAK,IAAI,IAAI,CAACI,MAAK,GAAG,CAACA,MAAK,KAAKA,MAAK;UAAAQ,QAAA,CAAAE,IAAA;UAAA;QAAA;QAAAF,QAAA,CAAAE,IAAA;QAChF,OAAMV,MAAK;MAAA;QAAAQ,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;QAAAN,UAAA,CAAAe,CAAA,CAAAT,QAAA,CAAAY,EAAA;MAAA;QAAAZ,QAAA,CAAAC,IAAA;QAAAP,UAAA,CAAAgB,CAAA;QAAA,OAAAV,QAAA,CAAAW,MAAA;MAAA;MAAA;QAAA,OAAAX,QAAA,CAAAa,IAAA;IAAA;EAAA,GAAAC,OAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}