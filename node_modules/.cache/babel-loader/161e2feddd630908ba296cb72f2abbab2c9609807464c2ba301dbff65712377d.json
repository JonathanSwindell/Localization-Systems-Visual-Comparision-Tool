{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _classCallCheck from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\n// Simple caching for constant-radius points.\nvar cacheDigits, cacheAppend, cacheRadius, cacheCircle;\nvar PathString = /*#__PURE__*/function () {\n  function PathString(digits) {\n    _classCallCheck(this, PathString);\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  _createClass(PathString, [{\n    key: \"pointRadius\",\n    value: function pointRadius(_) {\n      this._radius = +_;\n      return this;\n    }\n  }, {\n    key: \"polygonStart\",\n    value: function polygonStart() {\n      this._line = 0;\n    }\n  }, {\n    key: \"polygonEnd\",\n    value: function polygonEnd() {\n      this._line = NaN;\n    }\n  }, {\n    key: \"lineStart\",\n    value: function lineStart() {\n      this._point = 0;\n    }\n  }, {\n    key: \"lineEnd\",\n    value: function lineEnd() {\n      if (this._line === 0) this._ += \"Z\";\n      this._point = NaN;\n    }\n  }, {\n    key: \"point\",\n    value: function point(x, y) {\n      switch (this._point) {\n        case 0:\n          {\n            this._append(_templateObject || (_templateObject = _taggedTemplateLiteral([\"M\", \",\", \"\"])), x, y);\n            this._point = 1;\n            break;\n          }\n        case 1:\n          {\n            this._append(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"L\", \",\", \"\"])), x, y);\n            break;\n          }\n        default:\n          {\n            this._append(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"M\", \",\", \"\"])), x, y);\n            if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n              var r = this._radius;\n              var s = this._;\n              this._ = \"\"; // stash the old string so we can cache the circle path fragment\n              this._append(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"m0,\", \"a\", \",\", \" 0 1,1 0,\", \"a\", \",\", \" 0 1,1 0,\", \"z\"])), r, r, r, -2 * r, r, r, 2 * r);\n              cacheRadius = r;\n              cacheAppend = this._append;\n              cacheCircle = this._;\n              this._ = s;\n            }\n            this._ += cacheCircle;\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"result\",\n    value: function result() {\n      var result = this._;\n      this._ = \"\";\n      return result.length ? result : null;\n    }\n  }]);\n  return PathString;\n}();\nexport { PathString as default };\nfunction append(strings) {\n  var i = 1;\n  this._ += strings[0];\n  for (var j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\nfunction appendRound(digits) {\n  var d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(\"invalid digits: \".concat(digits));\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    var k = Math.pow(10, d);\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      var i = 1;\n      this._ += strings[0];\n      for (var j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}","map":{"version":3,"names":["cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_classCallCheck","_append","append","appendRound","_radius","_","_createClass","key","value","pointRadius","polygonStart","_line","polygonEnd","NaN","lineStart","_point","lineEnd","point","x","y","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","r","s","_templateObject4","result","length","default","strings","i","j","arguments","d","Math","floor","RangeError","concat","k","pow","round"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-geo/src/path/string.js"],"sourcesContent":["// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}