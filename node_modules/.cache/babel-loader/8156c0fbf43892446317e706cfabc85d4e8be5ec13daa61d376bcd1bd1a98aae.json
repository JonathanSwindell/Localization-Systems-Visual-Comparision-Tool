{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nexport default function extent(values, valueof) {\n  var min;\n  var max;\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n        if (value != null) {\n          if (min === undefined) {\n            if (value >= value) min = max = value;\n          } else {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n    var _iterator2 = _createForOfIteratorHelper(values),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n        if ((_value = valueof(_value, ++index, values)) != null) {\n          if (min === undefined) {\n            if (_value >= _value) min = max = _value;\n          } else {\n            if (min > _value) min = _value;\n            if (max < _value) max = _value;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n  return [min, max];\n}","map":{"version":3,"names":["extent","values","valueof","min","max","undefined","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","index","_iterator2","_step2"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-array/src/extent.js"],"sourcesContent":["export default function extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n"],"mappings":";AAAA,eAAe,SAASA,MAAMA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC9C,IAAIC,GAAG;EACP,IAAIC,GAAG;EACP,IAAIF,OAAO,KAAKG,SAAS,EAAE;IAAA,IAAAC,SAAA,GAAAC,0BAAA,CACLN,MAAM;MAAAO,KAAA;IAAA;MAA1B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA4B;QAAA,IAAjBC,KAAK,GAAAJ,KAAA,CAAAI,KAAA;QACd,IAAIA,KAAK,IAAI,IAAI,EAAE;UACjB,IAAIT,GAAG,KAAKE,SAAS,EAAE;YACrB,IAAIO,KAAK,IAAIA,KAAK,EAAET,GAAG,GAAGC,GAAG,GAAGQ,KAAK;UACvC,CAAC,MAAM;YACL,IAAIT,GAAG,GAAGS,KAAK,EAAET,GAAG,GAAGS,KAAK;YAC5B,IAAIR,GAAG,GAAGQ,KAAK,EAAER,GAAG,GAAGQ,KAAK;UAC9B;QACF;MACF;IAAC,SAAAC,GAAA;MAAAP,SAAA,CAAAQ,CAAA,CAAAD,GAAA;IAAA;MAAAP,SAAA,CAAAS,CAAA;IAAA;EACH,CAAC,MAAM;IACL,IAAIC,KAAK,GAAG,CAAC,CAAC;IAAC,IAAAC,UAAA,GAAAV,0BAAA,CACGN,MAAM;MAAAiB,MAAA;IAAA;MAAxB,KAAAD,UAAA,CAAAR,CAAA,MAAAS,MAAA,GAAAD,UAAA,CAAAP,CAAA,IAAAC,IAAA,GAA0B;QAAA,IAAjBC,MAAK,GAAAM,MAAA,CAAAN,KAAA;QACZ,IAAI,CAACA,MAAK,GAAGV,OAAO,CAACU,MAAK,EAAE,EAAEI,KAAK,EAAEf,MAAM,CAAC,KAAK,IAAI,EAAE;UACrD,IAAIE,GAAG,KAAKE,SAAS,EAAE;YACrB,IAAIO,MAAK,IAAIA,MAAK,EAAET,GAAG,GAAGC,GAAG,GAAGQ,MAAK;UACvC,CAAC,MAAM;YACL,IAAIT,GAAG,GAAGS,MAAK,EAAET,GAAG,GAAGS,MAAK;YAC5B,IAAIR,GAAG,GAAGQ,MAAK,EAAER,GAAG,GAAGQ,MAAK;UAC9B;QACF;MACF;IAAC,SAAAC,GAAA;MAAAI,UAAA,CAAAH,CAAA,CAAAD,GAAA;IAAA;MAAAI,UAAA,CAAAF,CAAA;IAAA;EACH;EACA,OAAO,CAACZ,GAAG,EAAEC,GAAG,CAAC;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}