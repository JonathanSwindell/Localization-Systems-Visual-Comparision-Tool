{"ast":null,"code":"import _slicedToArray from \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { interpolate, interpolateRound } from \"d3-interpolate\";\nimport { identity } from \"./continuous.js\";\nimport { initInterpolator } from \"./init.js\";\nimport { linearish } from \"./linear.js\";\nimport { loggish } from \"./log.js\";\nimport { symlogish } from \"./symlog.js\";\nimport { powish } from \"./pow.js\";\nfunction transformer() {\n  var x0 = 0,\n    x1 = 1,\n    t0,\n    t1,\n    k10,\n    transform,\n    interpolator = identity,\n    clamp = false,\n    unknown;\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n  scale.domain = function (_) {\n    var _ref;\n    return arguments.length ? ((_ref = _slicedToArray(_, 2), x0 = _ref[0], x1 = _ref[1]), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n  function range(interpolate) {\n    return function (_) {\n      var _ref2;\n      var r0, r1;\n      return arguments.length ? ((_ref2 = _slicedToArray(_, 2), r0 = _ref2[0], r1 = _ref2[1]), interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n  scale.range = range(interpolate);\n  scale.rangeRound = range(interpolateRound);\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\nexport function copy(source, target) {\n  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());\n}\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n  scale.copy = function () {\n    return copy(scale, sequential());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n  scale.copy = function () {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n  scale.copy = function () {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialPow() {\n  var scale = powish(transformer());\n  scale.copy = function () {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n  return initInterpolator.apply(scale, arguments);\n}\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"names":["interpolate","interpolateRound","identity","initInterpolator","linearish","loggish","symlogish","powish","transformer","x0","x1","t0","t1","k10","transform","interpolator","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","_ref","arguments","length","_slicedToArray","range","_ref2","r0","r1","rangeRound","t","copy","source","target","sequential","apply","sequentialLog","base","sequentialSymlog","constant","sequentialPow","exponent","sequentialSqrt"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-scale/src/sequential.js"],"sourcesContent":["import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}