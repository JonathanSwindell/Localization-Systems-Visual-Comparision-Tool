{"ast":null,"code":"import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": formatDecimal,\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","map":{"version":3,"names":["formatDecimal","formatPrefixAuto","formatRounded","_","x","p","toFixed","b","Math","round","toString","c","e","toExponential","f","g","toPrecision","o","X","toUpperCase"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-format/src/formatTypes.js"],"sourcesContent":["import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAOC,aAAa,MAAM,oBAAoB;AAE9C,eAAe;EACb,GAAG,EAAE,SAAAC,EAACC,CAAC,EAAEC,CAAC;IAAA,OAAK,CAACD,CAAC,GAAG,GAAG,EAAEE,OAAO,CAACD,CAAC,CAAC;EAAA;EACnC,GAAG,EAAE,SAAAE,EAACH,CAAC;IAAA,OAAKI,IAAI,CAACC,KAAK,CAACL,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC;EAAA;EACrC,GAAG,EAAE,SAAAC,EAACP,CAAC;IAAA,OAAKA,CAAC,GAAG,EAAE;EAAA;EAClB,GAAG,EAAEJ,aAAa;EAClB,GAAG,EAAE,SAAAY,EAACR,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACS,aAAa,CAACR,CAAC,CAAC;EAAA;EACjC,GAAG,EAAE,SAAAS,EAACV,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACE,OAAO,CAACD,CAAC,CAAC;EAAA;EAC3B,GAAG,EAAE,SAAAU,EAACX,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACY,WAAW,CAACX,CAAC,CAAC;EAAA;EAC/B,GAAG,EAAE,SAAAY,EAACb,CAAC;IAAA,OAAKI,IAAI,CAACC,KAAK,CAACL,CAAC,CAAC,CAACM,QAAQ,CAAC,CAAC,CAAC;EAAA;EACrC,GAAG,EAAE,SAAAL,EAACD,CAAC,EAAEC,EAAC;IAAA,OAAKH,aAAa,CAACE,CAAC,GAAG,GAAG,EAAEC,EAAC,CAAC;EAAA;EACxC,GAAG,EAAEH,aAAa;EAClB,GAAG,EAAED,gBAAgB;EACrB,GAAG,EAAE,SAAAiB,EAACd,CAAC;IAAA,OAAKI,IAAI,CAACC,KAAK,CAACL,CAAC,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC,CAACS,WAAW,EAAE;EAAA;EACpD,GAAG,EAAE,SAAAf,EAACA,EAAC;IAAA,OAAKI,IAAI,CAACC,KAAK,CAACL,EAAC,CAAC,CAACM,QAAQ,CAAC,EAAE,CAAC;EAAA;AACxC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}