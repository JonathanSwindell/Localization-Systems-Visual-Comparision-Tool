{"ast":null,"code":"import _toConsumableArray from\"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import*as d3 from'd3';export function useWebSocket(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),path=_useState2[0],setPath=_useState2[1];useEffect(function(){var socket=new WebSocket('ws://localhost:8080');socket.addEventListener('open',function(event){console.log('Connected to server');});socket.addEventListener('message',function(event){var coordinates=JSON.parse(event.data);console.log('Received coordinates',coordinates);// Update the path state with the new coordinates\nsetPath(function(prevPath){return[].concat(_toConsumableArray(prevPath),[coordinates]);});});socket.addEventListener('close',function(event){console.log('Disconnected from server');});return function(){socket.close();};},[]);function downloadCSV(){// Convert the data to CSV format\nvar csv=d3.csvFormat(path);// Create a Blob object for the CSV data\nvar csvBlob=new Blob([csv],{type:'text/csv'});// Create a URL for the Blob object\nvar csvUrl=URL.createObjectURL(csvBlob);// Create a link element for the CSV file download\nvar downloadLink=document.createElement('a');downloadLink.href=csvUrl;downloadLink.download='coordinates.csv';document.body.appendChild(downloadLink);downloadLink.click();document.body.removeChild(downloadLink);}return{path:path,downloadCSV:downloadCSV};}export default useWebSocket;","map":{"version":3,"names":["useEffect","useState","d3","useWebSocket","_useState","_useState2","_slicedToArray","path","setPath","socket","WebSocket","addEventListener","event","console","log","coordinates","JSON","parse","data","prevPath","concat","_toConsumableArray","close","downloadCSV","csv","csvFormat","csvBlob","Blob","type","csvUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/WebSocket/socket.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport function useWebSocket() {\r\n  const [path, setPath] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const socket = new WebSocket('ws://localhost:8080');\r\n\r\n    socket.addEventListener('open', function(event) {\r\n      console.log('Connected to server');\r\n    });\r\n\r\n    socket.addEventListener('message', function(event) {\r\n      const coordinates = JSON.parse(event.data);\r\n      console.log('Received coordinates', coordinates);\r\n\r\n      // Update the path state with the new coordinates\r\n      setPath(prevPath => [...prevPath, coordinates]);\r\n    });\r\n\r\n    socket.addEventListener('close', function(event) {\r\n      console.log('Disconnected from server');\r\n    });\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  function downloadCSV() {\r\n    // Convert the data to CSV format\r\n    const csv = d3.csvFormat(path);\r\n    // Create a Blob object for the CSV data\r\n    const csvBlob = new Blob([csv], { type: 'text/csv' });\r\n    // Create a URL for the Blob object\r\n    const csvUrl = URL.createObjectURL(csvBlob);\r\n    // Create a link element for the CSV file download\r\n    const downloadLink = document.createElement('a');\r\n    downloadLink.href = csvUrl;\r\n    downloadLink.download = 'coordinates.csv';\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    document.body.removeChild(downloadLink);\r\n  }\r\n\r\n  return { path, downloadCSV };\r\n}\r\n\r\nexport default useWebSocket;"],"mappings":"gSAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,GAAK,CAAAC,EAAE,KAAM,IAAI,CAExB,MAAO,SAAS,CAAAC,YAAYA,CAAA,CAAG,CAC7B,IAAAC,SAAA,CAAwBH,QAAQ,CAAC,EAAE,CAAC,CAAAI,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA7BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpBL,SAAS,CAAC,UAAM,CACd,GAAM,CAAAS,MAAM,CAAG,GAAI,CAAAC,SAAS,CAAC,qBAAqB,CAAC,CAEnDD,MAAM,CAACE,gBAAgB,CAAC,MAAM,CAAE,SAASC,KAAK,CAAE,CAC9CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CACpC,CAAC,CAAC,CAEFL,MAAM,CAACE,gBAAgB,CAAC,SAAS,CAAE,SAASC,KAAK,CAAE,CACjD,GAAM,CAAAG,WAAW,CAAGC,IAAI,CAACC,KAAK,CAACL,KAAK,CAACM,IAAI,CAAC,CAC1CL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEC,WAAW,CAAC,CAEhD;AACAP,OAAO,CAAC,SAAAW,QAAQ,WAAAC,MAAA,CAAAC,kBAAA,CAAQF,QAAQ,GAAEJ,WAAW,IAAC,CAAC,CACjD,CAAC,CAAC,CAEFN,MAAM,CAACE,gBAAgB,CAAC,OAAO,CAAE,SAASC,KAAK,CAAE,CAC/CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACzC,CAAC,CAAC,CAEF,MAAO,WAAM,CACXL,MAAM,CAACa,KAAK,EAAE,CAChB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB;AACA,GAAM,CAAAC,GAAG,CAAGtB,EAAE,CAACuB,SAAS,CAAClB,IAAI,CAAC,CAC9B;AACA,GAAM,CAAAmB,OAAO,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACH,GAAG,CAAC,CAAE,CAAEI,IAAI,CAAE,UAAW,CAAC,CAAC,CACrD;AACA,GAAM,CAAAC,MAAM,CAAGC,GAAG,CAACC,eAAe,CAACL,OAAO,CAAC,CAC3C;AACA,GAAM,CAAAM,YAAY,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CAChDF,YAAY,CAACG,IAAI,CAAGN,MAAM,CAC1BG,YAAY,CAACI,QAAQ,CAAG,iBAAiB,CACzCH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,YAAY,CAAC,CACvCA,YAAY,CAACO,KAAK,EAAE,CACpBN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,YAAY,CAAC,CACzC,CAEA,MAAO,CAAEzB,IAAI,CAAJA,IAAI,CAAEgB,WAAW,CAAXA,WAAY,CAAC,CAC9B,CAEA,cAAe,CAAApB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}