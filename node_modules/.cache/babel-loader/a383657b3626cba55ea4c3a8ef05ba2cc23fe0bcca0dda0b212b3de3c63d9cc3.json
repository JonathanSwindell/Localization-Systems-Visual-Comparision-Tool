{"ast":null,"code":"var _jsxFileName = \"/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/Map/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = _ref => {\n  _s();\n  let {\n    path,\n    color,\n    id\n  } = _ref;\n  const createPath = (map, pathCoords, color) => {\n    return new window.google.maps.Polyline({\n      map: map,\n      path: pathCoords,\n      geodesic: true,\n      strokeColor: color,\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n  };\n  useEffect(() => {\n    let map = new window.google.maps.Map(document.getElementById(id), {\n      zoom: 10,\n      center: path[path.length - 1],\n      mapTypeId: \"terrain\",\n      mapTypeControl: false\n    });\n    const pathPolyline = createPath(map, path, color);\n    return () => {\n      pathPolyline.setMap(null);\n    };\n  }, [path, color, id]);\n\n  //createPath(map, path, color);\n  // }, [path,color,id]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    id: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Map","_ref","_s","path","color","id","createPath","map","pathCoords","window","google","maps","Polyline","geodesic","strokeColor","strokeOpacity","strokeWeight","document","getElementById","zoom","center","length","mapTypeId","mapTypeControl","pathPolyline","setMap","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/src/components/Map/Map.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst Map = ({ path, color, id }) => {\n    const createPath = (map, pathCoords, color) => {\n      return new window.google.maps.Polyline({\n        map: map,\n        path: pathCoords,\n        geodesic: true,\n        strokeColor: color,\n        strokeOpacity: 1.0,\n        strokeWeight: 2,\n      });\n    };\n  \n    useEffect(() => {\n      let map = new window.google.maps.Map(document.getElementById(id), {\n        zoom: 10,\n        center: path[path.length-1],\n        mapTypeId: \"terrain\",\n        mapTypeControl: false,\n      });\n  \n      const pathPolyline = createPath(map,path,color);\n      return () => {\n\t   pathPolyline.setMap(null);\n      };\n    }, [path,color,id]);\n\t    \n   //createPath(map, path, color);\n   // }, [path,color,id]);\n  \n    return <div style={{ width: \"100%\", height: \"400px\" }} id={id} />;\n  };\n\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAG,CAAC,GAAAJ,IAAA;EAC5B,MAAMK,UAAU,GAAGA,CAACC,GAAG,EAAEC,UAAU,EAAEJ,KAAK,KAAK;IAC7C,OAAO,IAAIK,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,QAAQ,CAAC;MACrCL,GAAG,EAAEA,GAAG;MACRJ,IAAI,EAAEK,UAAU;MAChBK,QAAQ,EAAE,IAAI;MACdC,WAAW,EAAEV,KAAK;MAClBW,aAAa,EAAE,GAAG;MAClBC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIU,GAAG,GAAG,IAAIE,MAAM,CAACC,MAAM,CAACC,IAAI,CAACX,GAAG,CAACiB,QAAQ,CAACC,cAAc,CAACb,EAAE,CAAC,EAAE;MAChEc,IAAI,EAAE,EAAE;MACRC,MAAM,EAAEjB,IAAI,CAACA,IAAI,CAACkB,MAAM,GAAC,CAAC,CAAC;MAC3BC,SAAS,EAAE,SAAS;MACpBC,cAAc,EAAE;IAClB,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGlB,UAAU,CAACC,GAAG,EAACJ,IAAI,EAACC,KAAK,CAAC;IAC/C,OAAO,MAAM;MACfoB,YAAY,CAACC,MAAM,CAAC,IAAI,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACtB,IAAI,EAACC,KAAK,EAACC,EAAE,CAAC,CAAC;;EAEpB;EACA;;EAEC,oBAAON,OAAA;IAAK2B,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAACvB,EAAE,EAAEA;EAAG;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACnE,CAAC;AAAC9B,EAAA,CA9BEF,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}