{"ast":null,"code":"import { timeInterval } from \"./interval.js\";\nimport { durationHour, durationMinute, durationSecond } from \"./duration.js\";\nexport var timeHour = timeInterval(function (date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getHours();\n});\nexport var timeHours = timeHour.range;\nexport var utcHour = timeInterval(function (date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function (date, step) {\n  date.setTime(+date + step * durationHour);\n}, function (start, end) {\n  return (end - start) / durationHour;\n}, function (date) {\n  return date.getUTCHours();\n});\nexport var utcHours = utcHour.range;","map":{"version":3,"names":["timeInterval","durationHour","durationMinute","durationSecond","timeHour","date","setTime","getMilliseconds","getSeconds","getMinutes","step","start","end","getHours","timeHours","range","utcHour","setUTCMinutes","getUTCHours","utcHours"],"sources":["/Users/tqd0002/Documents/GitHub/TelemetryVisualization/node_modules/d3-time/src/hour.js"],"sourcesContent":["import {timeInterval} from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nexport const timeHour = timeInterval((date) => {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getHours();\n});\n\nexport const timeHours = timeHour.range;\n\nexport const utcHour = timeInterval((date) => {\n  date.setUTCMinutes(0, 0, 0);\n}, (date, step) => {\n  date.setTime(+date + step * durationHour);\n}, (start, end) => {\n  return (end - start) / durationHour;\n}, (date) => {\n  return date.getUTCHours();\n});\n\nexport const utcHours = utcHour.range;\n"],"mappings":"AAAA,SAAQA,YAAY,QAAO,eAAe;AAC1C,SAAQC,YAAY,EAAEC,cAAc,EAAEC,cAAc,QAAO,eAAe;AAE1E,OAAO,IAAMC,QAAQ,GAAGJ,YAAY,CAAC,UAACK,IAAI,EAAK;EAC7CA,IAAI,CAACC,OAAO,CAACD,IAAI,GAAGA,IAAI,CAACE,eAAe,EAAE,GAAGF,IAAI,CAACG,UAAU,EAAE,GAAGL,cAAc,GAAGE,IAAI,CAACI,UAAU,EAAE,GAAGP,cAAc,CAAC;AACvH,CAAC,EAAE,UAACG,IAAI,EAAEK,IAAI,EAAK;EACjBL,IAAI,CAACC,OAAO,CAAC,CAACD,IAAI,GAAGK,IAAI,GAAGT,YAAY,CAAC;AAC3C,CAAC,EAAE,UAACU,KAAK,EAAEC,GAAG,EAAK;EACjB,OAAO,CAACA,GAAG,GAAGD,KAAK,IAAIV,YAAY;AACrC,CAAC,EAAE,UAACI,IAAI,EAAK;EACX,OAAOA,IAAI,CAACQ,QAAQ,EAAE;AACxB,CAAC,CAAC;AAEF,OAAO,IAAMC,SAAS,GAAGV,QAAQ,CAACW,KAAK;AAEvC,OAAO,IAAMC,OAAO,GAAGhB,YAAY,CAAC,UAACK,IAAI,EAAK;EAC5CA,IAAI,CAACY,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC,EAAE,UAACZ,IAAI,EAAEK,IAAI,EAAK;EACjBL,IAAI,CAACC,OAAO,CAAC,CAACD,IAAI,GAAGK,IAAI,GAAGT,YAAY,CAAC;AAC3C,CAAC,EAAE,UAACU,KAAK,EAAEC,GAAG,EAAK;EACjB,OAAO,CAACA,GAAG,GAAGD,KAAK,IAAIV,YAAY;AACrC,CAAC,EAAE,UAACI,IAAI,EAAK;EACX,OAAOA,IAAI,CAACa,WAAW,EAAE;AAC3B,CAAC,CAAC;AAEF,OAAO,IAAMC,QAAQ,GAAGH,OAAO,CAACD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}